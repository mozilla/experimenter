[experiment]
segments = [
    'regular_users_v3', 'new_or_resurrected_v3',
    'tcp_conn_high_latency', 'tcp_conn_med_latency', 'tcp_conn_low_latency', 'other_tcp_conn_latency'
]

[metrics]
overall = [
    'time_to_load_event_start_preload_ms', 'time_to_load_event_start_no_preload_ms',
    'time_to_load_event_end_preload_ms', 'time_to_load_event_end_no_preload_ms',
    'load_input_event_response_preload_ms', 'load_input_event_response_no_preload_ms',
]
    ## Mean Time to Load Event Start (Preload)

    [metrics.time_to_load_event_start_preload_ms]
    select_expression = '{{agg_histogram_mean("payload.histograms.time_to_load_event_start_preload_ms")}}'
    data_source = 'main'

        [metrics.time_to_load_event_start_preload_ms.statistics.bootstrap_mean]
        pre_treatments = ["remove_nulls"]

        [metrics.time_to_load_event_start_preload_ms.statistics.deciles]
        pre_treatments = ["remove_nulls"]

        [metrics.time_to_load_event_start_preload_ms.statistics.kernel_density_estimate]
        pre_treatments = ["remove_nulls"]

        [metrics.time_to_load_event_start_preload_ms.statistics.empirical_cdf]
        pre_treatments = ["remove_nulls"]
        log_space = true

    ## Mean Time to Load Event Start (No Preload)

    [metrics.time_to_load_event_start_no_preload_ms]
    select_expression = '{{agg_histogram_mean("payload.histograms.time_to_load_event_start_no_preload_ms")}}'
    data_source = 'main'

        [metrics.time_to_load_event_start_no_preload_ms.statistics.bootstrap_mean]
        pre_treatments = ["remove_nulls"]

        [metrics.time_to_load_event_start_no_preload_ms.statistics.deciles]
        pre_treatments = ["remove_nulls"]

        [metrics.time_to_load_event_start_no_preload_ms.statistics.kernel_density_estimate]
        pre_treatments = ["remove_nulls"]

        [metrics.time_to_load_event_start_no_preload_ms.statistics.empirical_cdf]
        pre_treatments = ["remove_nulls"]
        log_space = true
    ## Mean Time to Load Event End (Preload)

    [metrics.time_to_load_event_end_preload_ms]
    select_expression = '{{agg_histogram_mean("payload.histograms.time_to_load_event_end_preload_ms")}}'
    data_source = 'main'

        [metrics.time_to_load_event_end_preload_ms.statistics.bootstrap_mean]
        pre_treatments = ["remove_nulls"]

        [metrics.time_to_load_event_end_preload_ms.statistics.deciles]
        pre_treatments = ["remove_nulls"]

        [metrics.time_to_load_event_end_preload_ms.statistics.kernel_density_estimate]
        pre_treatments = ["remove_nulls"]

        [metrics.time_to_load_event_end_preload_ms.statistics.empirical_cdf]
        pre_treatments = ["remove_nulls"]
        log_space = true

    ## Mean Time to Load Event End (No Preload)

    [metrics.time_to_load_event_end_no_preload_ms]
    select_expression = '{{agg_histogram_mean("payload.histograms.time_to_load_event_end_no_preload_ms")}}'
    data_source = 'main'

        [metrics.time_to_load_event_end_no_preload_ms.statistics.bootstrap_mean]
        pre_treatments = ["remove_nulls"]

        [metrics.time_to_load_event_end_no_preload_ms.statistics.deciles]
        pre_treatments = ["remove_nulls"]

        [metrics.time_to_load_event_end_no_preload_ms.statistics.kernel_density_estimate]
        pre_treatments = ["remove_nulls"]

        [metrics.time_to_load_event_end_no_preload_ms.statistics.empirical_cdf]
        pre_treatments = ["remove_nulls"]
        log_space = true

    ## Mean Load Input Event Response (Preload)

    [metrics.load_input_event_response_preload_ms]
    select_expression = '{{agg_histogram_mean("payload.histograms.load_input_event_response_preload_ms")}}'
    data_source = 'main'

        [metrics.load_input_event_response_preload_ms.statistics.bootstrap_mean]
        pre_treatments = ["remove_nulls"]

        [metrics.load_input_event_response_preload_ms.statistics.deciles]
        pre_treatments = ["remove_nulls"]

        [metrics.load_input_event_response_preload_ms.statistics.kernel_density_estimate]
        pre_treatments = ["remove_nulls"]

        [metrics.load_input_event_response_preload_ms.statistics.empirical_cdf]
        pre_treatments = ["remove_nulls"]
        log_space = true

    ## Mean Load Input Event Response (No Preload)

    [metrics.load_input_event_response_no_preload_ms]
    select_expression = '{{agg_histogram_mean("payload.histograms.load_input_event_response_no_preload_ms")}}'
    data_source = 'main'

        [metrics.load_input_event_response_no_preload_ms.statistics.bootstrap_mean]
        pre_treatments = ["remove_nulls"]

        [metrics.load_input_event_response_no_preload_ms.statistics.deciles]
        pre_treatments = ["remove_nulls"]

        [metrics.load_input_event_response_no_preload_ms.statistics.kernel_density_estimate]
        pre_treatments = ["remove_nulls"]

        [metrics.load_input_event_response_no_preload_ms.statistics.empirical_cdf]
        pre_treatments = ["remove_nulls"]
        log_space = true

    ## Mean Time to First Interaction (Preload)

    #[metrics.time_to_first_interaction_preload_ms]
    #select_expression = '{{agg_histogram_mean("payload.histograms.time_to_first_interaction_preload_ms")}}'
    #data_source = 'main'
    #
    #    [metrics.time_to_first_interaction_preload_ms.statistics.bootstrap_mean]
    #    pre_treatments = ["remove_nulls"]
    #
    #    [metrics.time_to_first_interaction_preload_ms.statistics.deciles]
    #    pre_treatments = ["remove_nulls"]
    #
    #    [metrics.time_to_first_interaction_preload_ms.statistics.kernel_density_estimate]
    #    pre_treatments = ["remove_nulls"]
    #
    #    [metrics.time_to_first_interaction_preload_ms.statistics.empirical_cdf]
    #    pre_treatments = ["remove_nulls"]
    #    log_space = true

    ## Mean Time to First Interaction (No Preload)

    [metrics.time_to_first_interaction_no_preload_ms]
    select_expression = '{{agg_histogram_mean("payload.histograms.time_to_first_interaction_no_preload_ms")}}'
    data_source = 'main'

        [metrics.time_to_first_interaction_no_preload_ms.statistics.bootstrap_mean]
        pre_treatments = ["remove_nulls"]

        [metrics.time_to_first_interaction_no_preload_ms.statistics.deciles]
        pre_treatments = ["remove_nulls"]

        [metrics.time_to_first_interaction_no_preload_ms.statistics.kernel_density_estimate]
        pre_treatments = ["remove_nulls"]

        [metrics.time_to_first_interaction_no_preload_ms.statistics.empirical_cdf]
        pre_treatments = ["remove_nulls"]
        log_space = true


## Segments

[segments.tcp_conn_low_latency]
select_expression = 'COALESCE(mozfun.hist.percentiles(mozfun.hist.merge(ARRAY_AGG(tcp_conn_time IGNORE NULLS)), [0.5])[SAFE_OFFSET(0)].value BETWEEN 1 AND 62, FALSE)'
data_source = "tcp_conn"

[segments.tcp_conn_med_latency]
select_expression = 'COALESCE(mozfun.hist.percentiles(mozfun.hist.merge(ARRAY_AGG(tcp_conn_time IGNORE NULLS)), [0.5])[SAFE_OFFSET(0)].value BETWEEN 63 AND 245, FALSE)'
data_source = "tcp_conn"

[segments.tcp_conn_high_latency]
select_expression = 'COALESCE(mozfun.hist.percentiles(mozfun.hist.merge(ARRAY_AGG(tcp_conn_time IGNORE NULLS)), [0.5])[SAFE_OFFSET(0)].value >= 255, FALSE)'
data_source = "tcp_conn"

[segments.other_tcp_conn_latency]
select_expression = 'mozfun.hist.merge(ARRAY_AGG(tcp_conn_time IGNORE NULLS)) IS NULL OR COALESCE(mozfun.hist.percentiles(mozfun.hist.merge(ARRAY_AGG(tcp_conn_time IGNORE NULLS)), [0.5])[SAFE_OFFSET(0)].value <= 0, TRUE)'
data_source = "tcp_conn"

[segments.data_sources.tcp_conn]
from_expression = """
(
    SELECT
        DATE(submission_timestamp) AS submission_date,
        client_id,
        mozfun.hist.merge(ARRAY_AGG(mozfun.hist.extract(payload.processes.content.histograms.http_page_tcp_connection_2) IGNORE NULLS)) AS tcp_conn_time,
    FROM `moz-fx-data-shared-prod.telemetry.main`
    WHERE
        DATE(submission_timestamp) BETWEEN DATE_SUB("{{experiment.start_date_str}}", INTERVAL 8 DAY) AND "{{experiment.last_enrollment_date_str}}"
        AND normalized_channel = 'release'
    GROUP BY submission_date, client_id
)
"""
