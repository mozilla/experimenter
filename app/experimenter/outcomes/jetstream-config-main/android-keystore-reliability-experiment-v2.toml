[experiment]
start_date = "2021-04-09"

[metrics]
weekly = ["experiment_failure", "get_failure", "abnormal_get", "normal_get", "write_failure", "write_success", "reset"]
overall = ["experiment_failure", "get_failure", "abnormal_get", "normal_get", "write_failure", "write_success", "reset"]

[metrics.experiment_failure]
select_expression = "COALESCE(LOGICAL_OR(name = 'experiment_failure'), FALSE)"
data_source = "android_keystore_events"
description = "The client encountered any experiment failures."
friendly_name = "experiment_failure"
statistics = { binomial = {} }

[metrics.get_failure]
select_expression = "COALESCE(LOGICAL_OR(name = 'get_failure'), FALSE)"
data_source = "android_keystore_events"
description = "The client encountered any get failures."
friendly_name = "get_failure"
statistics = { binomial = {} }

[metrics.abnormal_get]
# https://searchfox.org/mozilla-mobile/source/android-components/components/lib/dataprotect/src/main/java/mozilla/components/lib/dataprotect/SecurePrefsReliabilityExperiment.kt#48
select_expression = "COALESCE(LOGICAL_OR(name = 'get_result' AND mozfun.map.get_key(extra, 'result') NOT IN ('1', '2')), FALSE)"
data_source = "android_keystore_events"
description = "The client encountered any get failures."
friendly_name = "Abnormal get_result"
statistics = { binomial = {} }

[metrics.normal_get]
select_expression = "COALESCE(LOGICAL_OR(name = 'get_result' AND mozfun.map.get_key(extra, 'result') IN ('2')), FALSE)"
data_source = "android_keystore_events"
description = "The client performed a get of a stored value successfully."
friendly_name = "Successful present get_result"
statistics = { binomial = {} }

[metrics.write_failure]
select_expression = "COALESCE(LOGICAL_OR(name = 'write_failure'), FALSE)"
data_source = "android_keystore_events"
description = "The client encountered any write failures."
friendly_name = "write_failure"
statistics = { binomial = {} }

[metrics.write_success]
select_expression = "COALESCE(LOGICAL_OR(name = 'write_success'), FALSE)"
data_source = "android_keystore_events"
description = "The client did a write successfully."
friendly_name = "write_success"
statistics = { binomial = {} }

[metrics.reset]
select_expression = "COALESCE(LOGICAL_OR(name = 'reset'), FALSE)"
data_source = "android_keystore_events"
description = "The client performed any resets."
friendly_name = "reset"
statistics = { binomial = {} }

[data_sources.android_keystore_events]
from_expression = """(
    SELECT
        DATE(submission_timestamp) AS submission_date,
        client_info.client_id,
        ping_info.experiments,
        event.*,
    FROM
        mozdata.org_mozilla_firefox_beta.events e
        CROSS JOIN UNNEST(e.events) event
    WHERE event.category = "android_keystore_experiment"
)"""
experiments_column_type = "native"
