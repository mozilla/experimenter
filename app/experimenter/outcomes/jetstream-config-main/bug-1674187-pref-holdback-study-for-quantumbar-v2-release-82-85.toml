[experiment]
enrollment_query = """
    SELECT
        client_id,
        mozfun.map.get_key(experiments, "{{experiment.normandy_slug}}") AS branch,
        MIN(submission_date) AS enrollment_date,
        1 AS num_enrollments
    FROM `moz-fx-data-shared-prod`.telemetry.main_summary
    WHERE
        submission_date BETWEEN "{{experiment.start_date_str}}" AND "{{experiment.last_enrollment_date_str}}"
        AND mozfun.map.get_key(experiments, "{{experiment.normandy_slug}}") IS NOT NULL
        AND STARTS_WITH(app_version, "83.")
    GROUP BY 1, 2
"""
start_date = "2020-11-17"  # Fx 83 launch
enrollment_period = 14
reference_branch = 'holdback-group-no-update'

segments = ["regular_users_v3"]

[metrics]
weekly = ["organic_search_count", "search_count",  "tagged_search_count",
          "tagged_follow_on_search_count", "total_amazon_search_count",
          "urlbar_amazon_search_count", "searchmode_count", "search_engagement"]

overall = ["organic_search_count", "search_count", "tagged_search_count",
           "tagged_follow_on_search_count", "total_amazon_search_count",
           "urlbar_amazon_search_count", "searchmode_count", "search_engagement"]

[metrics.total_amazon_search_count]
select_expression = "SUM(CASE WHEN engine like 'amazon%' then sap else 0 end)"
data_source = "search_clients_daily"
[metrics.total_amazon_search_count.statistics.bootstrap_mean]
[metrics.total_amazon_search_count.statistics.deciles]


[metrics.urlbar_amazon_search_count]
select_expression = """
SUM(CASE
        WHEN source = 'alias' and engine like 'amazon%' then sap
        WHEN source = 'urlbar' and engine like 'amazon%' then sap
        WHEN source = 'urlbar-searchmode' and engine like 'amazon%' then sap
        else 0 end)"""
data_source = "search_clients_daily"
[metrics.urlbar_amazon_search_count.statistics.bootstrap_mean]
[metrics.urlbar_amazon_search_count.statistics.deciles]

[metrics.searchmode_count]
select_expression = """
SUM(CASE
        WHEN source = 'alias' then sap
        WHEN source = 'urlbar-searchmode' then sap
        else 0 end)"""
data_source = "search_clients_daily"
[metrics.searchmode_count.statistics.bootstrap_mean]
[metrics.searchmode_count.statistics.deciles]

[metrics.search_engagement]
select_expression = """
safe_divide((SUM(tagged_sap) + SUM(tagged_follow_on))*100.0,
            SUM(organic) + SUM(tagged_sap) + SUM(tagged_follow_on))"""
data_source = "search_clients_daily"
[metrics.search_engagement.statistics.bootstrap_mean]
pre_treatments = ["remove_nulls"]
[metrics.search_engagement.statistics.deciles]
pre_treatments = ["remove_nulls"]
