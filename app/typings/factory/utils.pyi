"""
This type stub file was generated by pyright.
"""

def import_object(module_name, attribute_name):  # -> Any:
    """Import an object from its absolute path.

    Example:
        >>> import_object('datetime', 'datetime')
        <type 'datetime.datetime'>
    """
    ...

class log_pprint:
    """Helper for properly printing args / kwargs passed to an object.

    Since it is only used with factory.debug(), the computation is
    performed lazily.
    """

    __slots__ = ...
    def __init__(self, args=..., kwargs=...) -> None: ...
    def __repr__(self): ...
    def __str__(self) -> str: ...

class ResetableIterator:
    """An iterator wrapper that can be 'reset()' to its start."""

    def __init__(self, iterator, **kwargs) -> None: ...
    def __iter__(self): ...
    def reset(self): ...

class OrderedBase:
    """Marks a class as being ordered.

    Each instance (even from subclasses) will share a global creation counter.
    """

    CREATION_COUNTER_FIELD = ...
    def __init__(self, **kwargs) -> None: ...
    def touch_creation_counter(self): ...

def sort_ordered_objects(items, getter=...):  # -> list[Unknown]:
    """Sort an iterable of OrderedBase instances.

    Args:
        items (iterable): the objects to sort
        getter (callable or None): a function to extract the OrderedBase instance from an object.

    Examples:
        >>> sort_ordered_objects([x, y, z])
        >>> sort_ordered_objects(v.items(), getter=lambda e: e[1])
    """
    ...
