"""
This type stub file was generated by pyright.
"""

import click
from celery.bin.base import CeleryCommand, handle_preload_options

"""The ``celery logtool`` command."""
__all__ = ("logtool",)
RE_LOG_START = ...
RE_TASK_RECEIVED = ...
RE_TASK_READY = ...
RE_TASK_INFO = ...
RE_TASK_RESULT = ...
REPORT_FORMAT = ...

class _task_counts(list):
    @property
    def format(self): ...

def task_info(line): ...

class Audit:
    def __init__(self, on_task_error=..., on_trace=..., on_debug=...) -> None: ...
    def run(self, files): ...
    def task_received(self, line, task_name, task_id): ...
    def task_ready(self, line, task_name, task_id, result): ...
    def task_error(self, line, task_name, task_id, result): ...
    def feed(self, line): ...
    def incomplete_tasks(self): ...
    def report(self): ...

@click.group()
@click.pass_context
@handle_preload_options
def logtool(ctx):  # -> None:
    """The ``celery logtool`` command."""
    ...

@logtool.command(cls=CeleryCommand)
@click.argument("files", nargs=-1)
@click.pass_context
def stats(ctx, files): ...
@logtool.command(cls=CeleryCommand)
@click.argument("files", nargs=-1)
@click.pass_context
def traces(ctx, files): ...
@logtool.command(cls=CeleryCommand)
@click.argument("files", nargs=-1)
@click.pass_context
def errors(ctx, files): ...
@logtool.command(cls=CeleryCommand)
@click.argument("files", nargs=-1)
@click.pass_context
def incomplete(ctx, files): ...
@logtool.command(cls=CeleryCommand)
@click.argument("files", nargs=-1)
@click.pass_context
def debug(ctx, files): ...
