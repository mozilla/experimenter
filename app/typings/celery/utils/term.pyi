"""
This type stub file was generated by pyright.
"""

"""Terminals and colors."""
__all__ = ("colored",)
OP_SEQ = ...
RESET_SEQ = ...
COLOR_SEQ = ...
IS_WINDOWS = ...
ITERM_PROFILE = ...
TERM = ...
TERM_IS_SCREEN = ...
_IMG_PRE = ...
_IMG_POST = ...

def fg(s): ...

class colored:
    """Terminal colored text.

    Example:
        >>> c = colored(enabled=True)
        >>> print(str(c.red('the quick '), c.blue('brown ', c.bold('fox ')),
        ...       c.magenta(c.underline('jumps over')),
        ...       c.yellow(' the lazy '),
        ...       c.green('dog ')))
    """

    def __init__(self, *s, **kwargs) -> None: ...
    def no_color(self): ...
    def embed(self): ...
    def __str__(self) -> str: ...
    def node(self, s, op): ...
    def black(self, *s): ...
    def red(self, *s): ...
    def green(self, *s): ...
    def yellow(self, *s): ...
    def blue(self, *s): ...
    def magenta(self, *s): ...
    def cyan(self, *s): ...
    def white(self, *s): ...
    def __repr__(self): ...
    def bold(self, *s): ...
    def underline(self, *s): ...
    def blink(self, *s): ...
    def reverse(self, *s): ...
    def bright(self, *s): ...
    def ired(self, *s): ...
    def igreen(self, *s): ...
    def iyellow(self, *s): ...
    def iblue(self, *s): ...
    def imagenta(self, *s): ...
    def icyan(self, *s): ...
    def iwhite(self, *s): ...
    def reset(self, *s): ...
    def __add__(self, other): ...

def supports_images(): ...
def imgcat(path, inline=..., preserve_aspect_ratio=..., **kwargs): ...
