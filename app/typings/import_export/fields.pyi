"""
This type stub file was generated by pyright.
"""

class Field:
    """
    Field represent mapping between `object` field and representation of
    this field.

    :param attribute: A string of either an instance attribute or callable off
        the object.

    :param column_name: Lets you provide a name for the column that represents
        this field in the export.

    :param widget: Defines a widget that will be used to represent this
        field's data in the export.

    :param readonly: A Boolean which defines if this field will be ignored
        during import.

    :param default: This value will be returned by
        :meth:`~import_export.fields.Field.clean` if this field's widget did
        not return an adequate value.

    :param saves_null_values: Controls whether null values are saved on the object
    """

    empty_values = ...
    def __init__(
        self,
        attribute=...,
        column_name=...,
        widget=...,
        default=...,
        readonly=...,
        saves_null_values=...,
    ) -> None: ...
    def __repr__(self):  # -> str:
        """
        Displays the module, class and name of the field.
        """
        ...
    def clean(self, data, **kwargs):  # -> NOT_PROVIDED:
        """
        Translates the value stored in the imported datasource to an
        appropriate Python object and returns it.
        """
        ...
    def get_value(self, obj):  # -> Any | Manager[Unknown] | None:
        """
        Returns the value of the object's attribute.
        """
        ...
    def save(self, obj, data, is_m2m=..., **kwargs):  # -> None:
        """
        If this field is not declared readonly, the object's attribute will
        be set to the value returned by :meth:`~import_export.fields.Field.clean`.
        """
        ...
    def export(self, obj):  # -> Any | Literal['']:
        """
        Returns value from the provided object converted to export
        representation.
        """
        ...
