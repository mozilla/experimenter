"""
This type stub file was generated by pyright.
"""

from django.db import models

from .compat import ArrayField, HStoreField, JSONField, PGJSONField, RangeField

singledispatch = ...

def convert_choice_name(name): ...
def get_choices(choices): ...
def convert_choices_to_named_enum_with_descriptions(name, choices):  # -> Enum:
    class EnumWithDescriptionsType: ...

def generate_enum_name(django_model_meta, field): ...
def convert_choice_field_to_enum(field, name=...): ...
def convert_django_field_with_choices(
    field, registry=..., convert_choices_to_enum=...
): ...
@singledispatch
def convert_django_field(field, registry=...): ...
@convert_django_field.register(models.CharField)
@convert_django_field.register(models.TextField)
@convert_django_field.register(models.EmailField)
@convert_django_field.register(models.SlugField)
@convert_django_field.register(models.URLField)
@convert_django_field.register(models.GenericIPAddressField)
@convert_django_field.register(models.FileField)
@convert_django_field.register(models.FilePathField)
def convert_field_to_string(field, registry=...): ...
@convert_django_field.register(models.AutoField)
def convert_field_to_id(field, registry=...): ...
@convert_django_field.register(models.UUIDField)
def convert_field_to_uuid(field, registry=...): ...
@convert_django_field.register(models.PositiveIntegerField)
@convert_django_field.register(models.PositiveSmallIntegerField)
@convert_django_field.register(models.SmallIntegerField)
@convert_django_field.register(models.BigIntegerField)
@convert_django_field.register(models.IntegerField)
def convert_field_to_int(field, registry=...): ...
@convert_django_field.register(models.NullBooleanField)
@convert_django_field.register(models.BooleanField)
def convert_field_to_boolean(field, registry=...): ...
@convert_django_field.register(models.DecimalField)
def convert_field_to_decimal(field, registry=...): ...
@convert_django_field.register(models.FloatField)
@convert_django_field.register(models.DurationField)
def convert_field_to_float(field, registry=...): ...
@convert_django_field.register(models.DateTimeField)
def convert_datetime_to_string(field, registry=...): ...
@convert_django_field.register(models.DateField)
def convert_date_to_string(field, registry=...): ...
@convert_django_field.register(models.TimeField)
def convert_time_to_string(field, registry=...): ...
@convert_django_field.register(models.OneToOneRel)
def convert_onetoone_field_to_djangomodel(field, registry=...): ...
@convert_django_field.register(models.ManyToManyField)
@convert_django_field.register(models.ManyToManyRel)
@convert_django_field.register(models.ManyToOneRel)
def convert_field_to_list_or_connection(field, registry=...): ...
@convert_django_field.register(models.OneToOneField)
@convert_django_field.register(models.ForeignKey)
def convert_field_to_djangomodel(field, registry=...): ...
@convert_django_field.register(ArrayField)
def convert_postgres_array_to_list(field, registry=...): ...
@convert_django_field.register(HStoreField)
@convert_django_field.register(PGJSONField)
@convert_django_field.register(JSONField)
def convert_pg_and_json_field_to_string(field, registry=...): ...
@convert_django_field.register(RangeField)
def convert_postgres_range_to_string(field, registry=...): ...
