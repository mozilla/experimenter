"""
This type stub file was generated by pyright.
"""

from django_filters import VERSION, Filter, MultipleChoiceFilter
from django_filters.filterset import BaseFilterSet

from ..forms import GlobalIDFormField, GlobalIDMultipleChoiceField

class GlobalIDFilter(Filter):
    field_class = GlobalIDFormField
    def filter(self, qs, value):
        """Convert the filter value to a primary key before filtering"""
        ...

class GlobalIDMultipleChoiceFilter(MultipleChoiceFilter):
    field_class = GlobalIDMultipleChoiceField
    def filter(self, qs, value): ...

GRAPHENE_FILTER_SET_OVERRIDES = ...

class GrapheneFilterSetMixin(BaseFilterSet):
    """A django_filters.filterset.BaseFilterSet with default filter overrides
    to handle global IDs"""

    FILTER_DEFAULTS = ...

if VERSION[0] < 2:
    class GrapheneFilterSetMixinPython2(GrapheneFilterSetMixin):
        @classmethod
        def filter_for_reverse_field(
            cls, f, name
        ):  # -> GlobalIDMultipleChoiceFilter | GlobalIDFilter:
            """Handles retrieving filters for reverse relationships
             We override the default implementation so that we can handle
            Global IDs (the default implementation expects database
            primary keys)
            """
            ...
    GrapheneFilterSetMixin = ...

def setup_filterset(filterset_class):  # -> Any:
    """Wrap a provided filterset in Graphene-specific functionality"""
    ...

def custom_filterset_factory(model, filterset_base_class=..., **meta):  # -> Type[_]:
    """Create a filterset for the given model using the provided meta data"""
    ...
