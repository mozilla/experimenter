version: "3"

services:
  experimenter:
    image: experimenter:deploy
    env_file: .env
    environment:
      - DEBUG=True
      - USE_YARN_DEV=False
    stdin_open: true
    tty: true
    depends_on:
      - db
      - redis
      - kinto
    ports:
      - "7001:7001"
    volumes:
      - media_volume:/experimenter/experimenter/media
    command: bash -c "python bin/setup_kinto.py;/experimenter/bin/wait-for-it.sh db:5432 -- python manage.py collectstatic --noinput&&gunicorn -w 4 -b 0.0.0.0:7001 experimenter.wsgi"

  worker:
    image: experimenter:deploy
    env_file: .env
    depends_on:
      - db
      - redis
    command: bash -c "/experimenter/bin/wait-for-it.sh db:5432 -- celery -A experimenter worker -l DEBUG"

  beat:
    image: experimenter:deploy
    env_file: .env
    depends_on:
      - db
      - redis
    command: bash -c "/experimenter/bin/wait-for-it.sh db:5432 -- celery -A experimenter beat --pidfile /celerybeat.pid -s /celerybeat-schedule -l DEBUG"

  nginx:
    build: ./nginx
    env_file: .env
    depends_on:
      - experimenter
    ports:
      - "443:443"

  db:
    restart: always
    image: postgres:14.8
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - db_volume:/var/lib/postgresql

  redis:
    image: redis:6.2.6
    ports:
      - "6379:6379"

  kinto:
    image: mozilla/remote-settings:30.1.1
    environment:
      KINTO_INI: /etc/kinto.ini
    ports:
      - "8888:8888"
    depends_on:
      - autograph
    volumes:
      - ./kinto/server.ini:/etc/kinto.ini

  autograph:
    image: mozilla/autograph:4.1.1
    ports:
      - "8000:8000"

volumes:
  db_volume:
  media_volume:
