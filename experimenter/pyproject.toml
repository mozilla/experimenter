[tool.poetry]
name = "app"
version = "0.1.0"
description = ""
authors = [""]

[tool.poetry.dependencies]
python = "^3.11"
black = "22.12.0"
celery = "5.4.0"
chardet = "4.0.0"
click = "8.1.6"
coverage = "6.5"
django-cors-headers = "3.14.0"
django-widget-tweaks = "1.5.0"
djangorestframework = "3.14.0"
factory_boy = "3.3.0"
gunicorn = "22.0.0"
ipdb = "0.13.9"
mock = "4.0.3"
psycopg2 = "2.9.5"
pytest = "6.2.4"
pytest-django = "4.5.2"
pytest-testmon = "1.3.3"
pytest-watch = "4.2.0"
python-decouple = "3.8"
redis = "4.6.0"
requests = { version = "2.32.1", extras = ["security"] }
responses = "0.25.0"
whitenoise = "5.3.0"
parameterized = "0.9.0"
pytest-cov = "2.12.1"
django-mozilla-product-details = "0.14.1"
django-countries = "7.6"
markus = "3.0.0"
datadog = "0.50.0"
sqlparse = "0.5.0"
asgiref = "3.8.1"
uritemplate = "3.0.1"
packaging = "21.3"
pyparsing = "2.4.7"
django-markdown2 = "0.3.1"
markdown2 = "2.5.0"
tblib = "1.7.0"
pytest-xdist = "2.5.0"
djangorestframework-csv = "2.1.1"
unicodecsv = "0.14.1"
kinto-http = "11.2.0"
jsonschema = "^4.23.0"
toml = "^0.10.2"
pydantic = "1.10.15"
django-test-migrations = "^1.3.0"
django-admin-rangefilter = "0.13.0"
pyjexl = "^0.3.0"
Pillow = "^9.5.0"
graphene-file-upload = "^1.3.0"
dj-inmemorystorage = "^2.1.0"
PyYAML = "^6.0"
django-import-export = "^3.0"
sentry-sdk = "^2.16.0"
djangorestframework-dataclasses = "^1.3.0"
graphene-django = "^3.2.0"
pyright = "^1.1.291"
django-types = "^0.19.1"
mozilla-nimbus-shared = "^2.5.2"
mozilla-nimbus-schemas = "2024.9.1"
django-redis = "^5.4.0"
fontawesomefree = "6.6.0"
ruff = "^0.6.1"
django = "^5.1"
dockerflow = "^2024.4.1"
django-filter = "^23.5"
django-bootstrap5 = "^24.3"
djlint = "^1.35.2"
django-storages = "^1.14.4"
google-cloud-storage = "^2.18.2"

[tool.poetry.dev-dependencies]
rope = "^0.23.0"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.pyright]
include = ["experimenter"]
exclude = [
    "**/node_modules",
    "**/__pycache__",
    "**/migrations",
    "experimenter/legacy",
    "**/tests",
]

reportCallInDefaultInitializer = true
reportConstantRedefinition = false
reportFunctionMemberAccess = false
reportGeneralTypeIssues = false
reportImplicitStringConcatenation = false
reportIncompatibleMethodOverride = false
reportIncompatibleVariableOverride = false
reportMissingModuleSource = false
reportMissingParameterType = false
reportMissingSuperCall = false
reportMissingTypeArgument = true
reportOptionalCall = true
reportOptionalIterable = true
reportOptionalMemberAccess = true
reportOptionalOperand = true
reportOptionalSubscript = true
reportPrivateUsage = true
reportPropertyTypeMismatch = true
reportSelfClsParameterName = false
reportTypedDictNotRequiredAccess = true
reportUninitializedInstanceVariable = false
reportUnknownArgumentType = false
reportUnknownLambdaType = false
reportUnknownMemberType = false
reportUnknownParameterType = false
reportUnknownVariableType = false
reportUnnecessaryTypeIgnoreComment = true
reportUntypedBaseClass = false
reportUntypedClassDecorator = true
reportUntypedFunctionDecorator = false
reportUnusedCallResult = false

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = ["migrations", ".tox", "node_modules", "legacy", ".pyenv"]

# Same as Black.
line-length = 90
[tool.ruff.lint]
select = [
    "A",
    "B",
    "C4",
    "DJ",
    "E",
    "F",
    "I",
    "ISC",
    "N",
    "PIE",
    "Q",
    "RET",
    "RSE",
    "RUF",
    "SIM",
    "TID",
    "UP",
    "W",
    "YTT",
    "PTH",
]
ignore = [
    "A003",
    "B017",
    "B035",
    "DJ001",
    "DJ006",
    "DJ012",
    "E402",
    "E741",
    "F403",
    "N802",
    "N803",
    "N806",
    "N812",
    "N815",
    "PIE796",
    "RET503",
    "RET504",
    "RET505",
    "RUF012",
    "SIM102",
    "UP006",
    "UP007",
    "UP038",
]

[tool.djlint]
profile = "django"
ignore = "H021,H030,H031"
blank_line_after_tag = "load,extends,include,endblock"
indent = 2
