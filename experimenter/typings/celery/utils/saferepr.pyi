"""
This type stub file was generated by pyright.
"""

from typing import Any, Set

"""Streaming, truncating, non-recursive version of :func:`repr`.

Differences from regular :func:`repr`:

- Sets are represented the Python 3 way: ``{1, 2}`` vs ``set([1, 2])``.
- Unicode strings does not have the ``u'`` prefix, even on Python 2.
- Empty set formatted as ``set()`` (Python 3), not ``set([])`` (Python 2).
- Longs don't have the ``L`` suffix.

Very slow with no limits, super quick with limits.
"""
__all__ = ("saferepr", "reprstream")
_literal = ...
_key = ...
_quoted = ...
_dirty = ...
chars_t = ...
safe_t = ...
set_t = ...
LIT_DICT_START = ...
LIT_DICT_KVSEP = ...
LIT_DICT_END = ...
LIT_LIST_START = ...
LIT_LIST_END = ...
LIT_LIST_SEP = ...
LIT_SET_START = ...
LIT_SET_END = ...
LIT_TUPLE_START = ...
LIT_TUPLE_END = ...
LIT_TUPLE_END_SV = ...

def saferepr(o: Any, maxlen: int = ..., maxlevels: int = ..., seen: Set = ...) -> str:
    """Safe version of :func:`repr`.

    Warning:
        Make sure you set the maxlen argument, or it will be very slow
        for recursive objects.  With the maxlen set, it's often faster
        than built-in repr.
    """
    ...

def reprstream(
    stack, seen=..., maxlevels=..., level=..., isinstance=...
):  # -> Generator[tuple[_literal, Unknown] | tuple[_key, Unknown] | tuple[str, Unknown] | tuple[_quoted, Unknown] | tuple[Unknown, Unknown], None, None]:
    """Streaming repr, yielding tokens."""
    ...
