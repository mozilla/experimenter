"""
This type stub file was generated by pyright.
"""

from celery import _state
from celery._state import (
    app_or_default,
    disable_trace,
    enable_trace,
    pop_current_task,
    push_current_task,
)
from celery.local import Proxy

from .base import Celery
from .utils import AppPickler

"""Celery Application."""
__all__ = (
    "Celery",
    "AppPickler",
    "app_or_default",
    "default_app",
    "bugreport",
    "enable_trace",
    "disable_trace",
    "shared_task",
    "push_current_task",
    "pop_current_task",
)
default_app = ...

def bugreport(app=...):
    """Return information useful in bug reports."""
    ...

def shared_task(*args, **kwargs):  # -> Proxy | ((fun: Unknown) -> Proxy):
    """Create shared task (decorator).

    This can be used by library authors to create tasks that'll work
    for any app environment.

    Returns:
        ~celery.local.Proxy: A proxy that always takes the task from the
        current apps task registry.

    Example:

        >>> from celery import Celery, shared_task
        >>> @shared_task
        ... def add(x, y):
        ...     return x + y
        ...
        >>> app1 = Celery(broker='amqp://')
        >>> add.app is app1
        True
        >>> app2 = Celery(broker='redis://')
        >>> add.app is app2
        True
    """
    ...
