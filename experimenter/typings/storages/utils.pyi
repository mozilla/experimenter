"""
This type stub file was generated by pyright.
"""

def to_bytes(content):  # -> bytearray | Any:
    """Wrap Django's force_bytes to pass through bytearrays."""
    ...

def setting(name, default=...):  # -> Any | None:
    """
    Helper function to get a Django setting by name. If setting doesn't exists
    it will return a default.

    :param name: Name of setting
    :type name: str
    :param default: Value if setting is unfound
    :returns: Setting's value
    """
    ...

def clean_name(name):  # -> Literal['']:
    """
    Cleans the name so that Windows style paths work
    """
    ...

def safe_join(base, *paths):  # -> LiteralString:
    """
    A version of django.utils._os.safe_join for S3 paths.

    Joins one or more path components to the base path component
    intelligently. Returns a normalized version of the final path.

    The final path must be located inside of the base path component
    (otherwise a ValueError is raised).

    Paths outside the base path indicate a possible security
    sensitive operation.
    """
    ...

def check_location(storage): ...
def lookup_env(names):  # -> str | None:
    """
    Look up for names in environment. Returns the first element
    found.
    """
    ...

def get_available_overwrite_name(name, max_length): ...
