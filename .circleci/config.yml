version: 2.1
jobs:
  check:
    machine:
      image: ubuntu-2004:202107-02 # Ubuntu 20.04, Docker v20.10.7, Docker Compose v1.29.2
      docker_layer_caching: true
    resource_class: large
    working_directory: ~/experimenter
    steps:
      - run:
          name: Docker info
          command: docker -v
      - run:
          name: Docker compose info
          command: docker-compose -v
      - checkout
      - run:
          name: Run tests and linting
          command: |
            cp .env.sample .env
            make check

  integration_nimbus:
    machine:
      image: ubuntu-2004:202107-02 # Ubuntu 20.04, Docker v20.10.7, Docker Compose v1.29.2
      docker_layer_caching: true
    resource_class: xlarge
    working_directory: ~/experimenter
    parallelism: 7 # This should match the number of entries in parallel_pytest_args.txt
    steps:
      - checkout
      - run:
          name: Run integration tests
          command: |
            PYTEST_ARGS=$(circleci tests split "app/tests/integration/nimbus/parallel_pytest_args.txt")
            cp .env.integration-tests .env
            make refresh SKIP_DUMMY=1
            make up_prod_detached
            make integration_test_nimbus PYTEST_ARGS="$PYTEST_ARGS"

  deploy:
    working_directory: ~/experimenter
    machine:
      image: ubuntu-2004:202107-02 # Ubuntu 20.04, Docker v20.10.7, Docker Compose v1.29.2
      docker_layer_caching: true
    steps:
      - checkout
      - deploy:
          name: Deploy to latest
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            make build_dev
            make build_test
            make build_ui
            ./scripts/store_git_info.sh
            make build_prod
            docker tag app:dev ${DOCKERHUB_REPO}:build_dev
            docker tag app:test ${DOCKERHUB_REPO}:build_test
            docker tag app:ui ${DOCKERHUB_REPO}:build_ui
            docker tag app:deploy ${DOCKERHUB_REPO}:latest
            docker push ${DOCKERHUB_REPO}:build_dev
            docker push ${DOCKERHUB_REPO}:build_test
            docker push ${DOCKERHUB_REPO}:build_ui
            docker push ${DOCKERHUB_REPO}:latest

workflows:
  version: 2
  build:
    jobs:
      - check:
          name: check
      - integration_nimbus:
          name: integration_nimbus
          filters:
            branches:
              ignore:
                - main
      - deploy:
          filters:
            branches:
              only: main
          requires:
           - check
