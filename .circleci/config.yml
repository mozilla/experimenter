version: 2.1
orbs:
  gh: circleci/github-cli@2.0
jobs:
  check:
    machine:
      image: ubuntu-2004:202107-02 # Ubuntu 20.04, Docker v20.10.7, Docker Compose v1.29.2
      docker_layer_caching: true
    resource_class: large
    working_directory: ~/experimenter
    steps:
      - run:
          name: Docker info
          command: docker -v
      - run:
          name: Docker compose info
          command: docker-compose -v
      - checkout
      - run:
          name: Run tests and linting
          command: |
            if git diff --name-only main HEAD | grep -E 'experimenter/'
              then
                echo "Changes detected in /experimenter directory. Running Experimenter tests and linting."
                cp .env.sample .env
                make check
              else
                echo "No changes in /experimenter directory. Skipping tests and linting."
                circleci-agent step halt
            fi

  integration_nimbus_desktop_release_targeting:
    machine:
      image: ubuntu-2004:202107-02 # Ubuntu 20.04, Docker v20.10.7, Docker Compose v1.29.2
      docker_layer_caching: true
    resource_class: large
    working_directory: ~/experimenter
    environment:
      FIREFOX_VERSION: nimbus-firefox-release
      PYTEST_ARGS: -k FIREFOX_DESKTOP -m run_targeting -n 4
      MOZ_REMOTE_SETTINGS_DEVTOOLS: 1 # allows us to override and set the remote settings URL
    steps:
      - checkout
      - run:
          name: Check file paths
          command: |
            if git diff --name-only main HEAD | grep -E 'experimenter/experimenter/targeting|experimenter/experimenter/experiments|experimenter/tests'
              then
                echo "Continuing"
              else
                echo "No targeting changes, skipping"
                circleci-agent step halt
            fi
      - run:
          name: Run integration tests
          command: |
            cp .env.integration-tests .env
            make refresh SKIP_DUMMY=1 PYTEST_SENTRY_DSN=$PYTEST_SENTRY_DSN up_prod_detached integration_test_nimbus PYTEST_ARGS="$PYTEST_ARGS"

  integration_nimbus_desktop_beta_targeting:
    machine:
      image: ubuntu-2004:202107-02 # Ubuntu 20.04, Docker v20.10.7, Docker Compose v1.29.2
      docker_layer_caching: true
    resource_class: large
    working_directory: ~/experimenter
    environment:
      FIREFOX_VERSION: nimbus-firefox-beta
      PYTEST_ARGS: -k FIREFOX_DESKTOP -m run_targeting -n 4
      MOZ_REMOTE_SETTINGS_DEVTOOLS: 1 # allows us to override and set the remote settings URL
    steps:
      - checkout
      - run:
          name: Check file paths
          command: |
            if git diff --name-only main HEAD | grep -E 'experimenter/experimenter/targeting|experimenter/experimenter/experiments|experimenter/tests'
              then
                echo "Continuing"
              else
                echo "No targeting changes, skipping"
                circleci-agent step halt
            fi
      - run:
          name: Run integration tests
          command: |
            cp .env.integration-tests .env
            make refresh SKIP_DUMMY=1 PYTEST_SENTRY_DSN=$PYTEST_SENTRY_DSN up_prod_detached integration_test_nimbus PYTEST_ARGS="$PYTEST_ARGS"

  integration_nimbus_desktop_nightly_targeting:
    machine:
      image: ubuntu-2004:202107-02 # Ubuntu 20.04, Docker v20.10.7, Docker Compose v1.29.2
      docker_layer_caching: true
    resource_class: large
    working_directory: ~/experimenter
    environment:
      FIREFOX_VERSION: nimbus-firefox-release
      PYTEST_ARGS: -k FIREFOX_DESKTOP -m run_targeting -n 2
      UPDATE_FIREFOX_VERSION: true
    steps:
      - checkout
      - run:
          name: Run integration tests
          command: |
            cp .env.integration-tests .env
            make refresh SKIP_DUMMY=1 PYTEST_SENTRY_DSN=$PYTEST_SENTRY_DSN up_prod_detached integration_test_nimbus PYTEST_ARGS="$PYTEST_ARGS"

  integration_nimbus_desktop_remote_settings:
    machine:
      image: ubuntu-2004:202107-02 # Ubuntu 20.04, Docker v20.10.7, Docker Compose v1.29.2
      docker_layer_caching: true
    resource_class: large
    working_directory: ~/experimenter
    environment:
      FIREFOX_VERSION: nimbus-firefox-release
      PYTEST_ARGS: -k FIREFOX_DESKTOP -m remote_settings
    steps:
      - checkout
      - run:
          name: Run integration tests
          command: |
            cp .env.integration-tests .env
            make refresh SKIP_DUMMY=1 PYTEST_SENTRY_DSN=$PYTEST_SENTRY_DSN up_prod_detached integration_test_nimbus PYTEST_ARGS="$PYTEST_ARGS"

  integration_nimbus_fenix_remote_settings:
    machine:
      image: ubuntu-2004:202107-02 # Ubuntu 20.04, Docker v20.10.7, Docker Compose v1.29.2
      docker_layer_caching: true
    resource_class: medium
    working_directory: ~/experimenter
    environment:
      FIREFOX_VERSION: nimbus-firefox-release
      PYTEST_ARGS: -k FENIX -m remote_settings
    steps:
      - checkout
      - run:
          name: Run integration tests
          command: |
            cp .env.integration-tests .env
            make refresh SKIP_DUMMY=1 PYTEST_SENTRY_DSN=$PYTEST_SENTRY_DSN up_prod_detached integration_test_nimbus PYTEST_ARGS="$PYTEST_ARGS"

  integration_nimbus_ios_remote_settings:
    machine:
      image: ubuntu-2004:202107-02 # Ubuntu 20.04, Docker v20.10.7, Docker Compose v1.29.2
      docker_layer_caching: true
    resource_class: medium
    working_directory: ~/experimenter
    environment:
      FIREFOX_VERSION: nimbus-firefox-release
      PYTEST_ARGS: -k 'not (FOCUS_IOS or DESKTOP or FENIX or FOCUS_ANDROID)' -m remote_settings
    steps:
      - checkout
      - run:
          name: Run integration tests
          command: |
            cp .env.integration-tests .env
            make refresh SKIP_DUMMY=1 PYTEST_SENTRY_DSN=$PYTEST_SENTRY_DSN up_prod_detached integration_test_nimbus PYTEST_ARGS="$PYTEST_ARGS"

  integration_nimbus_focus_android_remote_settings:
    machine:
      image: ubuntu-2004:202107-02 # Ubuntu 20.04, Docker v20.10.7, Docker Compose v1.29.2
      docker_layer_caching: true
    resource_class: medium
    working_directory: ~/experimenter
    environment:
      FIREFOX_VERSION: nimbus-firefox-release
      PYTEST_ARGS: -k FOCUS_ANDROID -m remote_settings
    steps:
      - checkout
      - run:
          name: Run integration tests
          command: |
            cp .env.integration-tests .env
            make refresh SKIP_DUMMY=1 PYTEST_SENTRY_DSN=$PYTEST_SENTRY_DSN up_prod_detached integration_test_nimbus PYTEST_ARGS="$PYTEST_ARGS"

  integration_nimbus_focus_ios_remote_settings:
    machine:
      image: ubuntu-2004:202107-02 # Ubuntu 20.04, Docker v20.10.7, Docker Compose v1.29.2
      docker_layer_caching: true
    resource_class: medium
    working_directory: ~/experimenter
    environment:
      FIREFOX_VERSION: nimbus-firefox-release
      PYTEST_ARGS: -k FOCUS_IOS -m remote_settings
    steps:
      - checkout
      - run:
          name: Run integration tests
          command: |
            cp .env.integration-tests .env
            make refresh SKIP_DUMMY=1 PYTEST_SENTRY_DSN=$PYTEST_SENTRY_DSN up_prod_detached integration_test_nimbus PYTEST_ARGS="$PYTEST_ARGS"

  integration_nimbus_desktop_enrollment:
    machine:
      image: ubuntu-2004:202107-02 # Ubuntu 20.04, Docker v20.10.7, Docker Compose v1.29.2
      docker_layer_caching: true
    resource_class: xlarge
    working_directory: ~/experimenter
    environment:
      FIREFOX_VERSION: nimbus-firefox-release
      PYTEST_ARGS: -k FIREFOX_DESKTOP -m desktop_enrollment --dist=loadgroup -n=2
      UPDATE_FIREFOX_VERSION: true
    steps:
      - checkout
      - run:
          name: Run integration tests
          command: |
            cp .env.integration-tests .env
            make refresh SKIP_DUMMY=1 PYTEST_SENTRY_DSN=$PYTEST_SENTRY_DSN up_prod_detached integration_test_nimbus PYTEST_ARGS="$PYTEST_ARGS"
          no_output_timeout: 30m

  integration_nimbus_desktop_ui:
    machine:
      image: ubuntu-2004:202107-02 # Ubuntu 20.04, Docker v20.10.7, Docker Compose v1.29.2
      docker_layer_caching: true
    resource_class: large
    working_directory: ~/experimenter
    environment:
      FIREFOX_VERSION: nimbus-firefox-release
      PYTEST_ARGS: -k FIREFOX_DESKTOP -m nimbus_ui -n 2
    steps:
      - checkout
      - run:
          name: Run integration tests
          command: |
            cp .env.integration-tests .env
            make refresh SKIP_DUMMY=1 PYTEST_SENTRY_DSN=$PYTEST_SENTRY_DSN up_prod_detached integration_test_nimbus PYTEST_ARGS="$PYTEST_ARGS"

  integration_nimbus_sdk_targeting:
    machine:
      image: ubuntu-2004:202107-02 # Ubuntu 20.04, Docker v20.10.7, Docker Compose v1.29.2
      docker_layer_caching: true
    resource_class: medium
    working_directory: ~/experimenter
    steps:
      - checkout
      - run:
          name: Check file paths
          command: |
            if git diff --name-only main HEAD | grep -E 'experimenter/experimenter/targeting|experimenter/experimenter/experiments|experimenter/tests'
              then
                echo "Continuing"
              else
                echo "No targeting changes, skipping"
                circleci-agent step halt
            fi
      - run:
          name: Run rust integration tests
          command: |
            cp .env.integration-tests .env
            make refresh SKIP_DUMMY=1 PYTEST_SENTRY_DSN=$PYTEST_SENTRY_DSN up_prod_detached integration_test_nimbus_rust PYTEST_ARGS="$PYTEST_ARGS"

  integration_legacy:
    machine:
      image: ubuntu-2004:202107-02 # Ubuntu 20.04, Docker v20.10.7, Docker Compose v1.29.2
      docker_layer_caching: true
    resource_class: large
    working_directory: ~/experimenter
    environment:
      FIREFOX_VERSION: nimbus-firefox-release
    steps:
      - run:
          name: Docker info
          command: docker -v
      - run:
          name: Docker compose info
          command: docker-compose -v
      - checkout
      - run:
          name: Run integration tests
          command: |
            cp .env.sample .env
            make refresh up_prod_detached integration_test_legacy

  deploy:
    working_directory: ~/experimenter
    machine:
      image: ubuntu-2004:202107-02 # Ubuntu 20.04, Docker v20.10.7, Docker Compose v1.29.2
      docker_layer_caching: true
    steps:
      - checkout
      - deploy:
          name: Deploy to latest
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            make build_dev build_test build_ui
            ./scripts/store_git_info.sh
            make build_prod
            docker tag experimenter:dev ${DOCKERHUB_REPO}:build_dev
            docker tag experimenter:test ${DOCKERHUB_REPO}:build_test
            docker tag experimenter:ui ${DOCKERHUB_REPO}:build_ui
            docker tag experimenter:deploy ${DOCKERHUB_REPO}:latest
            docker push ${DOCKERHUB_REPO}:build_dev
            docker push ${DOCKERHUB_REPO}:build_test
            docker push ${DOCKERHUB_REPO}:build_ui
            docker push ${DOCKERHUB_REPO}:latest

  update_external_configs:
    working_directory: ~/experimenter
    machine:
      image: ubuntu-2004:202107-02 # Ubuntu 20.04, Docker v20.10.7, Docker Compose v1.29.2
      docker_layer_caching: true
    steps:
      - add_ssh_keys:
          fingerprints:
            - "32:8e:72:0b:9a:a1:1c:b8:7e:90:e1:53:a3:73:68:47" # for git pushes from circleci, since relies on ssh
      - checkout
      - gh/setup:
          token: GH_TOKEN # for gh commands from circleci, since relies on user token, since por que no los dos?
      - run:
          name: Setup Git
          command: |
            git config --local user.name "dataops-ci-bot"
            git config --local user.email "dataops+ci-bot@mozilla.com"
            gh config set git_protocol https
      - run:
          name: Check for External Config Update
          command: |
            git checkout main
            git pull origin main
            make fetch_external_resources
            if (($(git status --porcelain | wc -c) > 0))
              then
                git checkout -B external-config
                git add .
                git commit -m 'chore(nimbus): Update External Configs'
                if (($((git diff external-config origin/external-config || git diff HEAD~1) | wc -c) > 0))
                  then
                    git push origin external-config -f
                    gh pr create -t "chore(nimbus): Update External Configs" -b "" --base main --head external-config --repo mozilla/experimenter || echo "PR already exists, skipping"
                  else
                    echo "Changes already committed, skipping"
                fi
              else
                echo "No config changes, skipping"
            fi

  build_firefox_versions:
    working_directory: ~/experimenter
    machine:
      image: ubuntu-2004:202107-02 # Ubuntu 20.04, Docker v20.10.7, Docker Compose v1.29.2
      docker_layer_caching: true
    steps:
      - checkout
      - run:
          name: Check for Firefox Update
          command: |
            set +e
            docker pull ${DOCKERHUB_REPO}:nimbus-firefox-beta
            docker run -d --name firefox-beta ${DOCKERHUB_REPO}:nimbus-firefox-beta
            docker_id=$(docker ps -aqf "name=^firefox-beta")
            docker cp $docker_id:/old_versions.txt /home/circleci/experimenter/old_versions.txt
            results=$(sudo ./.circleci/get_firefox_versions.sh)
            DIFF=$(diff /home/circleci/experimenter/new_versions.txt /home/circleci/experimenter/old_versions.txt)
            if [ ! "$DIFF" ]; then
                echo "No Firefox Version Changes found!"
                circleci-agent step halt
            fi
      - run:
          name: Get Firefox Versions
          command: |
            git clone --depth=1 git@github.com:SeleniumHQ/docker-selenium.git
            cd docker-selenium
            if echo "$results" | grep -q "BETA"; then
                BUILD_ARGS="--build-arg FIREFOX_VERSION=devedition-latest" VERSION="firefox" BUILD_DATE="beta" make standalone_firefox
            fi
            if echo "$results" | grep -q "RELEASE"; then
                BUILD_ARGS="--build-arg FIREFOX_VERSION=latest" VERSION="firefox" BUILD_DATE="release" make standalone_firefox
            fi
      - run:
          name: Save Images
          command: |
            results=$(sudo ./.circleci/get_firefox_versions.sh)
            mv /home/circleci/experimenter/new_versions.txt /home/circleci/experimenter/old_versions.txt
            cd docker-selenium
            BUILD_ARGS="--build-arg FIREFOX_VERSION=latest" VERSION="firefox" BUILD_DATE="release" make standalone_firefox
            BUILD_ARGS="--build-arg FIREFOX_VERSION=devedition-latest" VERSION="firefox" BUILD_DATE="beta" make standalone_firefox
            # Save release
            docker run -d --name firefox-release-build selenium/standalone-firefox:firefox-release
            docker_id=$(docker ps -aqf "name=^firefox-release-build")
            docker cp /home/circleci/experimenter/old_versions.txt $docker_id:/old_versions.txt
            docker commit $docker_id ${DOCKERHUB_REPO}:nimbus-firefox-release
            # Save Dev
            docker run -d --name firefox-beta-build selenium/standalone-firefox:firefox-beta
            docker_id=$(docker ps -aqf "name=^firefox-beta-build")
            docker cp /home/circleci/experimenter/old_versions.txt $docker_id:/old_versions.txt
            docker commit $docker_id ${DOCKERHUB_REPO}:nimbus-firefox-beta
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push ${DOCKERHUB_REPO}:nimbus-firefox-beta
            docker push ${DOCKERHUB_REPO}:nimbus-firefox-release
      - save_cache:
          key: version-cache-{{ checksum "old_versions.txt" }}
          paths:
            - /home/circleci/experimenter/old_versions.txt

  build_rust_image:
    working_directory: ~/experimenter
    machine:
      image: ubuntu-2004:202107-02 # Ubuntu 20.04, Docker v20.10.7, Docker Compose v1.29.2
      docker_layer_caching: true
    steps:
      - checkout
      - run:
          name: Check for tag change
          command: |
            set +e
            docker pull ${DOCKERHUB_REPO}:nimbus-rust-image
            docker_id=$(docker run -t -d --name nimbus-rust-image ${DOCKERHUB_REPO}:nimbus-rust-image)
            docker cp nimbus-rust-image:/code/application-services-old.txt /home/circleci/experimenter/application-services-old.txt
            git -c 'versionsort.suffix=-' \
              ls-remote --exit-code --refs --sort='version:refname' --tags https://github.com/mozilla/application-services.git \
              '*.*.*' | tail --lines=1 | cut --delimiter='/' --fields=3 > /home/circleci/experimenter/application-services-current.txt
            DIFF=$(diff /home/circleci/experimenter/application-services-current.txt /home/circleci/experimenter/application-services-old.txt)
            if [ ! "$DIFF" ]; then
                echo "No AS updates"
                circleci-agent step halt
            fi
      - run:
          name: Build rust test image
          command: |
            set +e
            docker kill nimbus-rust-image
            docker rm nimbus-rust-image
            AS_VERSION=$(git -c 'versionsort.suffix=-' \
              ls-remote --exit-code --refs --sort='version:refname' --tags https://github.com/mozilla/application-services.git \
              '*.*.*' | tail --lines=1 | cut --delimiter='/' --fields=3)
            docker build -t ${DOCKERHUB_REPO}:nimbus-rust-image -f experimenter/tests/integration/nimbus/utils/Dockerfile-rust-image --build-arg as_version=$AS_VERSION --progress=plain .
            docker_id=$(docker run -t -d --name nimbus-rust-image ${DOCKERHUB_REPO}:nimbus-rust-image)
            docker cp /home/circleci/experimenter/application-services-current.txt nimbus-rust-image:/code/application-services-old.txt
            docker commit $docker_id ${DOCKERHUB_REPO}:nimbus-rust-image
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push ${DOCKERHUB_REPO}:nimbus-rust-image
  cirrus_check:
    machine:
      image: ubuntu-2004:202107-02 # Ubuntu 20.04, Docker v20.10.7, Docker Compose v1.29.2
      docker_layer_caching: true
    resource_class: large
    working_directory: ~/cirrus
    steps:
      - run:
          name: Docker info
          command: docker -v
      - run:
          name: Docker compose info
          command: docker-compose -v
      - checkout
      - run:
          name: Run Cirrus tests and linting
          command: |
            if git diff --name-only main HEAD | grep -E 'cirrus/'
              then
                echo "Changes detected in /cirrus directory. Running Cirrus tests and linting."
                make cirrus_check
              else
                echo "No changes in /cirrus directory. Skipping tests and linting."
                circleci-agent step halt
            fi

workflows:
  version: 2
  weekly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - build_firefox_versions
      - build_rust_image

  hourly:
    triggers:
      - schedule:
          cron: "0 * * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - update_external_configs

  build:
    jobs:
      - check:
          name: check
      - integration_nimbus_desktop_release_targeting:
          name: Test Desktop Targeting (Release Firefox)
          filters:
            branches:
              ignore:
                - main
      - integration_nimbus_desktop_beta_targeting:
          name: Test Desktop Targeting (Beta Firefox)
          filters:
            branches:
              ignore:
                - main
      - integration_nimbus_desktop_nightly_targeting:
          name: Test Desktop Targeting (Nightly Firefox)
          filters:
            branches:
              ignore:
                - main
      - integration_nimbus_desktop_ui:
          name: Test Desktop Nimbus UI (Release Firefox)
          filters:
            branches:
              ignore:
                - main
      - integration_nimbus_desktop_remote_settings:
          name: Test Desktop and Remote Settings (Release Firefox)
          filters:
            branches:
              ignore:
                - main
      - integration_nimbus_fenix_remote_settings:
          name: Test Fenix and Remote Settings (Release Firefox)
          filters:
            branches:
              ignore:
                - main
      - integration_nimbus_ios_remote_settings:
          name: Test iOS and Remote Settings (Release Firefox)
          filters:
            branches:
              ignore:
                - main
      - integration_nimbus_focus_android_remote_settings:
          name: Test Focus Android and Remote Settings (Release Firefox)
          filters:
            branches:
              ignore:
                - main
      - integration_nimbus_focus_ios_remote_settings:
          name: Test Focus iOS and Remote Settings (Release Firefox)
          filters:
            branches:
              ignore:
                - main
      - integration_nimbus_desktop_enrollment:
          name: Test Desktop Enrollment (Release Firefox)
          filters:
            branches:
              ignore:
                - main
      - integration_nimbus_sdk_targeting:
          name: Test SDK Targeting (Release Firefox)
          filters:
            branches:
              ignore:
                - main
      - integration_legacy:
          name: Test Legacy Desktop (Release Firefox)
          filters:
            branches:
              ignore:
                - main
      - deploy:
          filters:
            branches:
              only: main
          requires:
            - check
      - cirrus_check:
          name: Cirrus Check
